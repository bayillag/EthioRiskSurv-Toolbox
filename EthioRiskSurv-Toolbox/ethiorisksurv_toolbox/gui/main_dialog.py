# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ethiosurv_risk_toolbox/ui/main_dialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from ..utils.gis_utils import RESOURCE_LAYERS, get_layer_by_name # <-- IMPORT NEW UTILS

class Ui_EthioRiskSurvToolboxDialogBase(object):
    def setupUi(self, EthioRiskSurvToolboxDialogBase):
        EthioRiskSurvToolboxDialogBase.setObjectName("EthioRiskSurvToolboxDialogBase")
        EthioRiskSurvToolboxDialogBase.resize(550, 650)
        self.main_layout = QtWidgets.QVBoxLayout(EthioRiskSurvToolboxDialogBase)
        self.main_layout.setObjectName("main_layout")
        self.tab_widget = QtWidgets.QTabWidget(EthioRiskSurvToolboxDialogBase)
        self.tab_widget.setObjectName("tab_widget")
        self.tab_risk_analysis = QtWidgets.QWidget()
        self.tab_risk_analysis.setObjectName("tab_risk_analysis")
        self.gridLayout_1 = QtWidgets.QGridLayout(self.tab_risk_analysis)
        self.gridLayout_1.setObjectName("gridLayout_1")
        self.label_project_def = QtWidgets.QLabel(self.tab_risk_analysis)
        self.label_project_def.setObjectName("label_project_def")
        self.gridLayout_1.addWidget(self.label_project_def, 0, 0, 1, 2)
        self.label_project_name = QtWidgets.QLabel(self.tab_risk_analysis)
        self.label_project_name.setObjectName("label_project_name")
        self.gridLayout_1.addWidget(self.label_project_name, 1, 0, 1, 1)
        self.le_project_name = QtWidgets.QLineEdit(self.tab_risk_analysis)
        self.le_project_name.setObjectName("le_project_name")
        self.gridLayout_1.addWidget(self.le_project_name, 1, 1, 1, 1)
        self.label_objective = QtWidgets.QLabel(self.tab_risk_analysis)
        self.label_objective.setObjectName("label_objective")
        self.gridLayout_1.addWidget(self.label_objective, 2, 0, 1, 1)
        self.combo_objective = QtWidgets.QComboBox(self.tab_risk_analysis)
        self.combo_objective.setObjectName("combo_objective")
        self.gridLayout_1.addWidget(self.combo_objective, 2, 1, 1, 1)
        self.label_study_area = QtWidgets.QLabel(self.tab_risk_analysis)
        self.label_study_area.setObjectName("label_study_area")
        self.gridLayout_1.addWidget(self.label_study_area, 3, 0, 1, 1)
        self.mMapLayerComboBox_study_area = QgsMapLayerComboBox(self.tab_risk_analysis)
        self.mMapLayerComboBox_study_area.setObjectName("mMapLayerComboBox_study_area")
        self.gridLayout_1.addWidget(self.mMapLayerComboBox_study_area, 3, 1, 1, 1)
        self.line_1 = QtWidgets.QFrame(self.tab_risk_analysis)
        self.line_1.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_1.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_1.setObjectName("line_1")
        self.gridLayout_1.addWidget(self.line_1, 4, 0, 1, 2)
        self.label_risk_factors = QtWidgets.QLabel(self.tab_risk_analysis)
        self.label_risk_factors.setObjectName("label_risk_factors")
        self.gridLayout_1.addWidget(self.label_risk_factors, 5, 0, 1, 2)
        self.table_risk_factors = QtWidgets.QTableWidget(self.tab_risk_analysis)
        self.table_risk_factors.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.table_risk_factors.setObjectName("table_risk_factors")
        self.table_risk_factors.setColumnCount(4)
        self.table_risk_factors.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.table_risk_factors.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_risk_factors.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_risk_factors.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_risk_factors.setHorizontalHeaderItem(3, item)
        self.table_risk_factors.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_1.addWidget(self.table_risk_factors, 6, 0, 1, 2)
        self.btn_add_factor = QtWidgets.QPushButton(self.tab_risk_analysis)
        self.btn_add_factor.setObjectName("btn_add_factor")
        self.gridLayout_1.addWidget(self.btn_add_factor, 7, 0, 1, 1)
        self.btn_remove_factor = QtWidgets.QPushButton(self.tab_risk_analysis)
        self.btn_remove_factor.setObjectName("btn_remove_factor")
        self.gridLayout_1.addWidget(self.btn_remove_factor, 7, 1, 1, 1, QtCore.Qt.AlignRight)
        self.label_resolution = QtWidgets.QLabel(self.tab_risk_analysis)
        self.label_resolution.setObjectName("label_resolution")
        self.gridLayout_1.addWidget(self.label_resolution, 8, 0, 1, 1)
        self.spinBox_resolution = QtWidgets.QSpinBox(self.tab_risk_analysis)
        self.spinBox_resolution.setMinimum(100)
        self.spinBox_resolution.setMaximum(10000)
        self.spinBox_resolution.setSingleStep(100)
        self.spinBox_resolution.setProperty("value", 1000)
        self.spinBox_resolution.setObjectName("spinBox_resolution")
        self.gridLayout_1.addWidget(self.spinBox_resolution, 8, 1, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_1.addItem(spacerItem, 9, 0, 1, 2)
        self.btn_generate_risk_map = QtWidgets.QPushButton(self.tab_risk_analysis)
        self.btn_generate_risk_map.setMinimumSize(QtCore.QSize(0, 40))
        self.btn_generate_risk_map.setStyleSheet("background-color: #4CAF50; color: white; font-weight: bold;")
        self.btn_generate_risk_map.setObjectName("btn_generate_risk_map")
        self.gridLayout_1.addWidget(self.btn_generate_risk_map, 10, 0, 1, 2)
        self.tab_widget.addTab(self.tab_risk_analysis, "")
        self.tab_sampling = QtWidgets.QWidget()
        self.tab_sampling.setObjectName("tab_sampling")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.tab_sampling)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label_sampling_inputs = QtWidgets.QLabel(self.tab_sampling)
        self.label_sampling_inputs.setObjectName("label_sampling_inputs")
        self.gridLayout_2.addWidget(self.label_sampling_inputs, 0, 0, 1, 2)
        self.label_risk_map = QtWidgets.QLabel(self.tab_sampling)
        self.label_risk_map.setObjectName("label_risk_map")
        self.gridLayout_2.addWidget(self.label_risk_map, 1, 0, 1, 1)
        self.mMapLayerComboBox_risk_map = QgsMapLayerComboBox(self.tab_sampling)
        self.mMapLayerComboBox_risk_map.setObjectName("mMapLayerComboBox_risk_map")
        self.gridLayout_2.addWidget(self.mMapLayerComboBox_risk_map, 1, 1, 1, 1)
        self.label_snap_layer = QtWidgets.QLabel(self.tab_sampling)
        self.label_snap_layer.setObjectName("label_snap_layer")
        self.gridLayout_2.addWidget(self.label_snap_layer, 2, 0, 1, 1)
        self.mMapLayerComboBox_snap_layer = QgsMapLayerComboBox(self.tab_sampling)
        self.mMapLayerComboBox_snap_layer.setObjectName("mMapLayerComboBox_snap_layer")
        self.gridLayout_2.addWidget(self.mMapLayerComboBox_snap_layer, 2, 1, 1, 1)
        self.line_3 = QtWidgets.QFrame(self.tab_sampling)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.gridLayout_2.addWidget(self.line_3, 3, 0, 1, 2)
        self.label_sampling_method = QtWidgets.QLabel(self.tab_sampling)
        self.label_sampling_method.setObjectName("label_sampling_method")
        self.gridLayout_2.addWidget(self.label_sampling_method, 4, 0, 1, 2)
        self.label_strategy = QtWidgets.QLabel(self.tab_sampling)
        self.label_strategy.setObjectName("label_strategy")
        self.gridLayout_2.addWidget(self.label_strategy, 5, 0, 1, 1)
        self.combo_strategy = QtWidgets.QComboBox(self.tab_sampling)
        self.combo_strategy.setObjectName("combo_strategy")
        self.gridLayout_2.addWidget(self.combo_strategy, 5, 1, 1, 1)
        self.stackedWidget_params = QtWidgets.QStackedWidget(self.tab_sampling)
        self.stackedWidget_params.setObjectName("stackedWidget_params")
        self.page_random = QtWidgets.QWidget()
        self.page_random.setObjectName("page_random")
        self.formLayout_random = QtWidgets.QFormLayout(self.page_random)
        self.formLayout_random.setObjectName("formLayout_random")
        self.label = QtWidgets.QLabel(self.page_random)
        self.label.setObjectName("label")
        self.formLayout_random.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label)
        self.spinBox_random_n = QtWidgets.QSpinBox(self.page_random)
        self.spinBox_random_n.setMaximum(99999)
        self.spinBox_random_n.setProperty("value", 100)
        self.spinBox_random_n.setObjectName("spinBox_random_n")
        self.formLayout_random.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.spinBox_random_n)
        self.stackedWidget_params.addWidget(self.page_random)
        self.page_stratified = QtWidgets.QWidget()
        self.page_stratified.setObjectName("page_stratified")
        self.gridLayout_stratified = QtWidgets.QGridLayout(self.page_stratified)
        self.gridLayout_stratified.setObjectName("gridLayout_stratified")
        self.label_2 = QtWidgets.QLabel(self.page_stratified)
        self.label_2.setObjectName("label_2")
        self.gridLayout_stratified.addWidget(self.label_2, 0, 0, 1, 1)
        self.spinBox_strata_count = QtWidgets.QSpinBox(self.page_stratified)
        self.spinBox_strata_count.setMinimum(2)
        self.spinBox_strata_count.setMaximum(10)
        self.spinBox_strata_count.setProperty("value", 3)
        self.spinBox_strata_count.setObjectName("spinBox_strata_count")
        self.gridLayout_stratified.addWidget(self.spinBox_strata_count, 0, 1, 1, 1)
        self.btn_classify_risk_map = QtWidgets.QPushButton(self.page_stratified)
        self.btn_classify_risk_map.setObjectName("btn_classify_risk_map")
        self.gridLayout_stratified.addWidget(self.btn_classify_risk_map, 0, 2, 1, 1)
        self.table_stratified_n = QtWidgets.QTableWidget(self.page_stratified)
        self.table_stratified_n.setObjectName("table_stratified_n")
        self.table_stratified_n.setColumnCount(2)
        self.table_stratified_n.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.table_stratified_n.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_stratified_n.setHorizontalHeaderItem(1, item)
        self.gridLayout_stratified.addWidget(self.table_stratified_n, 1, 0, 1, 3)
        self.stackedWidget_params.addWidget(self.page_stratified)
        self.page_targeted = QtWidgets.QWidget()
        self.page_targeted.setObjectName("page_targeted")
        self.formLayout_targeted = QtWidgets.QFormLayout(self.page_targeted)
        self.formLayout_targeted.setObjectName("formLayout_targeted")
        self.label_3 = QtWidgets.QLabel(self.page_targeted)
        self.label_3.setObjectName("label_3")
        self.formLayout_targeted.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_3)
        self.doubleSpinBox_risk_threshold = QtWidgets.QDoubleSpinBox(self.page_targeted)
        self.doubleSpinBox_risk_threshold.setMaximum(1.0)
        self.doubleSpinBox_risk_threshold.setSingleStep(0.1)
        self.doubleSpinBox_risk_threshold.setProperty("value", 0.75)
        self.doubleSpinBox_risk_threshold.setObjectName("doubleSpinBox_risk_threshold")
        self.formLayout_targeted.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.doubleSpinBox_risk_threshold)
        self.label_4 = QtWidgets.QLabel(self.page_targeted)
        self.label_4.setObjectName("label_4")
        self.formLayout_targeted.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_4)
        self.spinBox_targeted_n = QtWidgets.QSpinBox(self.page_targeted)
        self.spinBox_targeted_n.setMaximum(99999)
        self.spinBox_targeted_n.setProperty("value", 100)
        self.spinBox_targeted_n.setObjectName("spinBox_targeted_n")
        self.formLayout_targeted.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.spinBox_targeted_n)
        self.stackedWidget_params.addWidget(self.page_targeted)
        self.gridLayout_2.addWidget(self.stackedWidget_params, 6, 0, 1, 2)
        self.label_output_name = QtWidgets.QLabel(self.tab_sampling)
        self.label_output_name.setObjectName("label_output_name")
        self.gridLayout_2.addWidget(self.label_output_name, 7, 0, 1, 1)
        self.le_output_name = QtWidgets.QLineEdit(self.tab_sampling)
        self.le_output_name.setObjectName("le_output_name")
        self.gridLayout_2.addWidget(self.le_output_name, 7, 1, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_2.addItem(spacerItem1, 8, 0, 1, 2)
        self.btn_generate_samples = QtWidgets.QPushButton(self.tab_sampling)
        self.btn_generate_samples.setMinimumSize(QtCore.QSize(0, 40))
        self.btn_generate_samples.setStyleSheet("background-color: #008CBA; color: white; font-weight: bold;")
        self.btn_generate_samples.setObjectName("btn_generate_samples")
        self.gridLayout_2.addWidget(self.btn_generate_samples, 9, 0, 1, 2)
        self.tab_widget.addTab(self.tab_sampling, "")
        self.tab_cost = QtWidgets.QWidget()
        self.tab_cost.setObjectName("tab_cost")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.tab_cost)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.label_cost_params = QtWidgets.QLabel(self.tab_cost)
        self.label_cost_params.setObjectName("label_cost_params")
        self.gridLayout_3.addWidget(self.label_cost_params, 0, 0, 1, 2)
        self.groupBox_costs = QtWidgets.QGroupBox(self.tab_cost)
        self.groupBox_costs.setObjectName("groupBox_costs")
        self.formLayout_costs = QtWidgets.QFormLayout(self.groupBox_costs)
        self.formLayout_costs.setObjectName("formLayout_costs")
        self.label_5 = QtWidgets.QLabel(self.groupBox_costs)
        self.label_5.setObjectName("label_5")
        self.formLayout_costs.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_5)
        self.spinBox_cost_per_sample = QtWidgets.QSpinBox(self.groupBox_costs)
        self.spinBox_cost_per_sample.setMaximum(99999)
        self.spinBox_cost_per_sample.setProperty("value", 500)
        self.spinBox_cost_per_sample.setObjectName("spinBox_cost_per_sample")
        self.formLayout_costs.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.spinBox_cost_per_sample)
        self.label_6 = QtWidgets.QLabel(self.groupBox_costs)
        self.label_6.setObjectName("label_6")
        self.formLayout_costs.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_6)
        self.spinBox_cost_per_diem = QtWidgets.QSpinBox(self.groupBox_costs)
        self.spinBox_cost_per_diem.setMaximum(99999)
        self.spinBox_cost_per_diem.setProperty("value", 1000)
        self.spinBox_cost_per_diem.setObjectName("spinBox_cost_per_diem")
        self.formLayout_costs.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.spinBox_cost_per_diem)
        self.label_7 = QtWidgets.QLabel(self.groupBox_costs)
        self.label_7.setObjectName("label_7")
        self.formLayout_costs.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_7)
        self.spinBox_team_size = QtWidgets.QSpinBox(self.groupBox_costs)
        self.spinBox_team_size.setMinimum(1)
        self.spinBox_team_size.setProperty("value", 2)
        self.spinBox_team_size.setObjectName("spinBox_team_size")
        self.formLayout_costs.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.spinBox_team_size)
        self.label_8 = QtWidgets.QLabel(self.groupBox_costs)
        self.label_8.setObjectName("label_8")
        self.formLayout_costs.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_8)
        self.spinBox_samples_per_day = QtWidgets.QSpinBox(self.groupBox_costs)
        self.spinBox_samples_per_day.setMinimum(1)
        self.spinBox_samples_per_day.setMaximum(999)
        self.spinBox_samples_per_day.setProperty("value", 50)
        self.spinBox_samples_per_day.setObjectName("spinBox_samples_per_day")
        self.formLayout_costs.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.spinBox_samples_per_day)
        self.label_9 = QtWidgets.QLabel(self.groupBox_costs)
        self.label_9.setObjectName("label_9")
        self.formLayout_costs.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_9)
        self.spinBox_cost_per_km = QtWidgets.QSpinBox(self.groupBox_costs)
        self.spinBox_cost_per_km.setMaximum(999)
        self.spinBox_cost_per_km.setProperty("value", 20)
        self.spinBox_cost_per_km.setObjectName("spinBox_cost_per_km")
        self.formLayout_costs.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.spinBox_cost_per_km)
        self.gridLayout_3.addWidget(self.groupBox_costs, 1, 0, 1, 2)
        self.line_4 = QtWidgets.QFrame(self.tab_cost)
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.gridLayout_3.addWidget(self.line_4, 2, 0, 1, 2)
        self.label_scenario_analysis = QtWidgets.QLabel(self.tab_cost)
        self.label_scenario_analysis.setObjectName("label_scenario_analysis")
        self.gridLayout_3.addWidget(self.label_scenario_analysis, 3, 0, 1, 2)
        self.table_scenarios = QtWidgets.QTableWidget(self.tab_cost)
        self.table_scenarios.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.table_scenarios.setObjectName("table_scenarios")
        self.table_scenarios.setColumnCount(5)
        self.table_scenarios.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.table_scenarios.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_scenarios.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_scenarios.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_scenarios.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_scenarios.setHorizontalHeaderItem(4, item)
        self.table_scenarios.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_3.addWidget(self.table_scenarios, 4, 0, 1, 2)
        self.btn_calculate_and_add = QtWidgets.QPushButton(self.tab_cost)
        self.btn_calculate_and_add.setMinimumSize(QtCore.QSize(0, 40))
        self.btn_calculate_and_add.setStyleSheet("background-color: #f44336; color: white; font-weight: bold;")
        self.btn_calculate_and_add.setObjectName("btn_calculate_and_add")
        self.gridLayout_3.addWidget(self.btn_calculate_and_add, 5, 0, 1, 1)
        self.btn_clear_scenarios = QtWidgets.QPushButton(self.tab_cost)
        self.btn_clear_scenarios.setObjectName("btn_clear_scenarios")
        self.gridLayout_3.addWidget(self.btn_clear_scenarios, 5, 1, 1, 1, QtCore.Qt.AlignRight)
        self.tab_widget.addTab(self.tab_cost, "")
        self.tab_report = QtWidgets.QWidget()
        self.tab_report.setObjectName("tab_report")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.tab_report)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.label_export_field = QtWidgets.QLabel(self.tab_report)
        self.label_export_field.setObjectName("label_export_field")
        self.gridLayout_4.addWidget(self.label_export_field, 0, 0, 1, 2)
        self.label_10 = QtWidgets.QLabel(self.tab_report)
        self.label_10.setObjectName("label_10")
        self.gridLayout_4.addWidget(self.label_10, 1, 0, 1, 1)
        self.mMapLayerComboBox_export_layer = QgsMapLayerComboBox(self.tab_report)
        self.mMapLayerComboBox_export_layer.setObjectName("mMapLayerComboBox_export_layer")
        self.gridLayout_4.addWidget(self.mMapLayerComboBox_export_layer, 1, 1, 1, 1)
        self.btn_export_layer = QtWidgets.QPushButton(self.tab_report)
        self.btn_export_layer.setObjectName("btn_export_layer")
        self.gridLayout_4.addWidget(self.btn_export_layer, 2, 0, 1, 2)
        self.line_5 = QtWidgets.QFrame(self.tab_report)
        self.line_5.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.gridLayout_4.addWidget(self.line_5, 3, 0, 1, 2)
        self.label_generate_report = QtWidgets.QLabel(self.tab_report)
        self.label_generate_report.setObjectName("label_generate_report")
        self.gridLayout_4.addWidget(self.label_generate_report, 4, 0, 1, 2)
        self.label_11 = QtWidgets.QLabel(self.tab_report)
        self.label_11.setObjectName("label_11")
        self.gridLayout_4.addWidget(self.label_11, 5, 0, 1, 1)
        self.le_report_title = QtWidgets.QLineEdit(self.tab_report)
        self.le_report_title.setObjectName("le_report_title")
        self.gridLayout_4.addWidget(self.le_report_title, 5, 1, 1, 1)
        self.label_12 = QtWidgets.QLabel(self.tab_report)
        self.label_12.setObjectName("label_12")
        self.gridLayout_4.addWidget(self.label_12, 6, 0, 1, 1)
        self.le_report_author = QtWidgets.QLineEdit(self.tab_report)
        self.le_report_author.setObjectName("le_report_author")
        self.gridLayout_4.addWidget(self.le_report_author, 6, 1, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_4.addItem(spacerItem2, 7, 0, 1, 2)
        self.btn_generate_pdf = QtWidgets.QPushButton(self.tab_report)
        self.btn_generate_pdf.setMinimumSize(QtCore.QSize(0, 40))
        self.btn_generate_pdf.setStyleSheet("background-color: #2196F3; color: white; font-weight: bold;")
        self.btn_generate_pdf.setObjectName("btn_generate_pdf")
        self.gridLayout_4.addWidget(self.btn_generate_pdf, 8, 0, 1, 2)
        self.tab_widget.addTab(self.tab_report, "")
        self.main_layout.addWidget(self.tab_widget)

        self.retranslateUi(EthioRiskSurvToolboxDialogBase)
        self.tab_widget.setCurrentIndex(0)
        self.stackedWidget_params.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(EthioRiskSurvToolboxDialogBase)

    def retranslateUi(self, EthioRiskSurvToolboxDialogBase):
        _translate = QtCore.QCoreApplication.translate
        EthioRiskSurvToolboxDialogBase.setWindowTitle(_translate("EthioRiskSurvToolboxDialogBase", "EthioRiskSurv-Toolbox"))
        self.label_project_def.setText(_translate("EthioRiskSurvToolboxDialogBase", "<b>1. Project Definition</b>"))
        self.label_project_name.setText(_translate("EthioRiskSurvToolboxDialogBase", "Project Name:"))
        self.label_objective.setText(_translate("EthioRiskSurvToolboxDialogBase", "Surveillance Objective:"))
        self.label_study_area.setText(_translate("EthioRiskSurvToolboxDialogBase", "Study Area Layer:"))
        self.label_risk_factors.setText(_translate("EthioRiskSurvToolboxDialogBase", "<b>2. Risk Factor Modeling</b>"))
        item = self.table_risk_factors.horizontalHeaderItem(0)
        item.setText(_translate("EthioRiskSurvToolboxDialogBase", "Layer Name"))
        item = self.table_risk_factors.horizontalHeaderItem(1)
        item.setText(_translate("EthioRiskSurvToolboxDialogBase", "Weight"))
        item = self.table_risk_factors.horizontalHeaderItem(2)
        item.setText(_translate("EthioRiskSurvToolboxDialogBase", "Correlation"))
        item = self.table_risk_factors.horizontalHeaderItem(3)
        item.setText(_translate("EthioRiskSurvToolboxDialogBase", "Type"))
        self.btn_add_factor.setText(_translate("EthioRiskSurvToolboxDialogBase", "Add Risk Factor"))
        self.btn_remove_factor.setText(_translate("EthioRiskSurvToolboxDialogBase", "Remove Selected Factor"))
        self.label_resolution.setText(_translate("EthioRiskSurvToolboxDialogBase", "Output Resolution (meters):"))
        self.btn_generate_risk_map.setText(_translate("EthioRiskSurvToolboxDialogBase", "GENERATE FINAL RISK MAP"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.tab_risk_analysis), _translate("EthioRiskSurvToolboxDialogBase", "1. Risk Analysis"))
        self.label_sampling_inputs.setText(_translate("EthioRiskSurvToolboxDialogBase", "<b>1. Input Data</b>"))
        self.label_risk_map.setText(_translate("EthioRiskSurvToolboxDialogBase", "Risk Map Layer:"))
        self.label_snap_layer.setText(_translate("EthioRiskSurvToolboxDialogBase", "Snap Points to Layer (Optional):"))
        self.label_sampling_method.setText(_translate("EthioRiskSurvToolboxDialogBase", "<b>2. Sampling Method & Parameters</b>"))
        self.label_strategy.setText(_translate("EthioRiskSurvToolboxDialogBase", "Strategy Type:"))
        self.label.setText(_translate("EthioRiskSurvToolboxDialogBase", "Total Samples:"))
        self.label_2.setText(_translate("EthioRiskSurvToolboxDialogBase", "Number of Strata:"))
        self.btn_classify_risk_map.setText(_translate("EthioRiskSurvToolboxDialogBase", "Classify Risk Map"))
        item = self.table_stratified_n.horizontalHeaderItem(0)
        item.setText(_translate("EthioRiskSurvToolboxDialogBase", "Stratum"))
        item = self.table_stratified_n.horizontalHeaderItem(1)
        item.setText(_translate("EthioRiskSurvToolboxDialogBase", "# of Samples"))
        self.label_3.setText(_translate("EthioRiskSurvToolboxDialogBase", "Risk Threshold (0-1):"))
        self.label_4.setText(_translate("EthioRiskSurvToolboxDialogBase", "Total Samples:"))
        self.label_output_name.setText(_translate("EthioRiskSurvToolboxDialogBase", "Output Layer Name:"))
        self.btn_generate_samples.setText(_translate("EthioRiskSurvToolboxDialogBase", "GENERATE SAMPLING POINTS"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.tab_sampling), _translate("EthioRiskSurvToolboxDialogBase", "2. Sampling Design"))
        self.label_cost_params.setText(_translate("EthioRiskSurvToolboxDialogBase", "<b>1. Cost Parameter Inputs (in ETB)</b>"))
        self.groupBox_costs.setTitle(_translate("EthioRiskSurvToolboxDialogBase", "Operational Costs"))
        self.label_5.setText(_translate("EthioRiskSurvToolboxDialogBase", "Cost per Sample (Lab, Consumables):"))
        self.label_6.setText(_translate("EthioRiskSurvToolboxDialogBase", "Field Team Per Diem (per person/day):"))
        self.label_7.setText(_translate("EthioRiskSurvToolboxDialogBase", "People per Field Team:"))
        self.label_8.setText(_translate("EthioRiskSurvToolboxDialogBase", "Samples Collected per Team per Day:"))
        self.label_9.setText(_translate("EthioRiskSurvToolboxDialogBase", "Vehicle Cost per Kilometer:"))
        self.label_scenario_analysis.setText(_translate("EthioRiskSurvToolboxDialogBase", "<b>2. Scenario Analysis</b>"))
        item = self.table_scenarios.horizontalHeaderItem(0)
        item.setText(_translate("EthioRiskSurvToolboxDialogBase", "Scenario Name"))
        item = self.table_scenarios.horizontalHeaderItem(1)
        item.setText(_translate("EthioRiskSurvToolboxDialogBase", "Strategy"))
        item = self.table_scenarios.horizontalHeaderItem(2)
        item.setText(_translate("EthioRiskSurvToolboxDialogBase", "# Samples"))
        item = self.table_scenarios.horizontalHeaderItem(3)
        item.setText(_translate("EthioRiskSurvToolboxDialogBase", "Total Cost (ETB)"))
        item = self.table_scenarios.horizontalHeaderItem(4)
        item.setText(_translate("EthioRiskSurvToolboxDialogBase", "Cost/Sample"))
        self.btn_calculate_and_add.setText(_translate("EthioRiskSurvToolboxDialogBase", "CALCULATE COST FOR CURRENT PLAN & ADD TO TABLE"))
        self.btn_clear_scenarios.setText(_translate("EthioRiskSurvToolboxDialogBase", "Clear Table"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.tab_cost), _translate("EthioRiskSurvToolboxDialogBase", "3. Cost Evaluation"))
        self.label_export_field.setText(_translate("EthioRiskSurvToolboxDialogBase", "<b>1. Export Sampling Plan for Field Teams</b>"))
        self.label_10.setText(_translate("EthioRiskSurvToolboxDialogBase", "Sampling Layer:"))
        self.btn_export_layer.setText(_translate("EthioRiskSurvToolboxDialogBase", "Export Layer to File (GPX, KML, SHP, CSV)..."))
        self.label_generate_report.setText(_translate("EthioRiskSurvToolboxDialogBase", "<b>2. Generate Formal Surveillance Plan Document</b>"))
        self.label_11.setText(_translate("EthioRiskSurvToolboxDialogBase", "Report Title:"))
        self.label_12.setText(_translate("EthioRiskSurvToolboxDialogBase", "Author / Department:"))
        self.btn_generate_pdf.setText(_translate("EthioRiskSurvToolboxDialogBase", "GENERATE PDF REPORT"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.tab_report), _translate("EthioRiskSurvToolboxDialogBase", "4. Report & Export"))
from qgis.gui import QgsMapLayerComboBox

# ... (existing imports)
from ..utils.gis_utils import RESOURCE_LAYERS, get_layer_by_name # <-- IMPORT NEW UTILS

# ... (inside the MainDialog class)

class MainDialog(QDialog, FORM_CLASS):
    # ... (__init__ method remains the same)

    def setup_ui_logic(self):
        """Set up initial state and filters for all UI elements."""
        # --- Tab 1 ---
        # ... (objective combo box setup) ...
        self.mMapLayerComboBox_study_area.setFilters(QgsMapLayerProxyModel.PolygonLayer)
        
        # --- NEW: Add resource layers to the Study Area dropdown ---
        self.mMapLayerComboBox_study_area.addItem("--- Base Layers ---", None)
        for name in RESOURCE_LAYERS.keys():
            self.mMapLayerComboBox_study_area.addItem(name)
        
        # ... (table setup) ...

        # --- Tab 2 ---
        self.mMapLayerComboBox_risk_map.setFilters(QgsMapLayerProxyModel.RasterLayer)
        self.mMapLayerComboBox_snap_layer.setFilters(QgsMapLayerProxyModel.PointLayer)
        # We don't add base layers to the snap layer, as it's meant for user data like Kebeles.
        
        # ... (rest of setup_ui_logic) ...

    # --- Update the methods that use the layers ---

    def run_risk_analysis(self):
        project_name = self.le_project_name.text()
        
        # --- MODIFIED: Get the study area layer using our utility ---
        selected_layer_name = self.mMapLayerComboBox_study_area.currentText()
        study_area_layer = get_layer_by_name(selected_layer_name)
        
        resolution = self.spinBox_resolution.value()
        
        if not project_name or not study_area_layer:
            iface.messageBar().pushMessage("Error", "Project Name and a valid Study Area Layer are required.", level=Qgis.Critical)
            return

        # ... (The rest of the run_risk_analysis method remains exactly the same) ...
        # ... it will now work with either a project layer or a newly loaded resource layer.

    def run_sampling_design(self):
        strategy_name = self.combo_strategy.currentText()
        risk_map = self.mMapLayerComboBox_risk_map.currentLayer()
        
        # --- MODIFIED: Get the study area layer again ---
        selected_study_area_name = self.mMapLayerComboBox_study_area.currentText()
        study_area = get_layer_by_name(selected_study_area_name)
        
        snap_layer = self.mMapLayerComboBox_snap_layer.currentLayer() # This still comes directly from the project
        output_name = self.le_output_name.text()
        
        if not risk_map or not study_area:
            iface.messageBar().pushMessage("Error", "A valid Risk Map and Study Area are required.", level=Qgis.Critical)
            return

        # ... (The rest of the run_sampling_design method remains exactly the same) ...

    def run_cost_evaluation(self):
        # ... (existing logic) ...
        # --- MODIFIED: Get the study area layer for HQ point calculation ---
        selected_study_area_name = self.mMapLayerComboBox_study_area.currentText()
        study_area_layer = get_layer_by_name(selected_study_area_name)
        
        if not study_area_layer:
            iface.messageBar().pushMessage("Error", "Study Area layer from Tab 1 is required for cost evaluation.", level=Qgis.Critical)
            return
        
        self.hq_point = study_area_layer.extent().center()
        
        # ... (The rest of the run_cost_evaluation method remains the same) ...
        
    def run_report_generation(self):
        # ... (existing data gathering logic) ...
        
        # --- MODIFIED: Get the study area name for the report ---
        selected_study_area_name = self.mMapLayerComboBox_study_area.currentText()
        report_data['study_area_name'] = selected_study_area_name
        
        # ... (The rest of the run_report_generation method remains the same) ...
